{"ast":null,"code":"var _jsxFileName = \"/Users/asif/Downloads/WebDev/FullStackOpen2022/part2/data-for-countries/src/components/Countries.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport CountryDetail from \"./CountryDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countries = _ref => {\n  _s();\n\n  let {\n    countriesToShow\n  } = _ref;\n  const [countryShow, setCountryShow] = useState(false);\n\n  const handleShowCoutry = country => {\n    return /*#__PURE__*/_jsxDEV(CountryDetail, {\n      country: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: countriesToShow.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 18\n    }, this) : countriesToShow.length > 1 ? countriesToShow.map(country => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [country.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)]\n      }, country.name.common, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this);\n    }) : countriesToShow.map(country => {\n      return /*#__PURE__*/_jsxDEV(CountryDetail, {\n        country: country\n      }, country.name.common, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Countries, \"Ijcltnam+lFMkHdaU7JvOhp24CQ=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["useState","CountryDetail","Countries","countriesToShow","countryShow","setCountryShow","handleShowCoutry","country","length","map","name","common"],"sources":["/Users/asif/Downloads/WebDev/FullStackOpen2022/part2/data-for-countries/src/components/Countries.js"],"sourcesContent":["import { useState } from \"react\"\nimport CountryDetail from \"./CountryDetail\"\n\nconst Countries = ({countriesToShow}) => {\n    const [countryShow, setCountryShow] = useState(false)\n\n    const handleShowCoutry = (country) => {\n        return(\n            <CountryDetail country={country} />\n        )\n    }\n\n    return (\n        <>\n        {\n            countriesToShow.length > 10\n              ? (<p>Too many matches, specify another filter</p> )\n              : (\n                countriesToShow.length > 1? countriesToShow.map(country => {\n                  return (\n                    <p \n                        key={country.name.common}>{country.name.common} \n                        <button>show</button>\n                    </p>)\n                }) : (\n                  countriesToShow.map(country => {\n                    return <CountryDetail key={country.name.common} country={country} />\n                  })\n                )\n              )\n          }\n          </>\n    )\n}\n\nexport default Countries"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AAEA,MAAMC,SAAS,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAACC;EAAD,CAAsB;EACrC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;;EAEA,MAAMM,gBAAgB,GAAIC,OAAD,IAAa;IAClC,oBACI,QAAC,aAAD;MAAe,OAAO,EAAEA;IAAxB;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH,CAJD;;EAMA,oBACI;IAAA,UAEIJ,eAAe,CAACK,MAAhB,GAAyB,EAAzB,gBACK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADL,GAGIL,eAAe,CAACK,MAAhB,GAAyB,CAAzB,GAA4BL,eAAe,CAACM,GAAhB,CAAoBF,OAAO,IAAI;MACzD,oBACE;QAAA,WAC+BA,OAAO,CAACG,IAAR,CAAaC,MAD5C,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA,GACSJ,OAAO,CAACG,IAAR,CAAaC,MADtB;QAAA;QAAA;QAAA;MAAA,QADF;IAKD,CAN2B,CAA5B,GAOER,eAAe,CAACM,GAAhB,CAAoBF,OAAO,IAAI;MAC7B,oBAAO,QAAC,aAAD;QAAyC,OAAO,EAAEA;MAAlD,GAAoBA,OAAO,CAACG,IAAR,CAAaC,MAAjC;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFD;EAZV,iBADJ;AAqBH,CA9BD;;GAAMT,S;;KAAAA,S;AAgCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}