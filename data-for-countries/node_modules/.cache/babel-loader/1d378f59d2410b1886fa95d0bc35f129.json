{"ast":null,"code":"var _jsxFileName = \"/Users/asif/Downloads/WebDev/FullStackOpen2022/part2/data-for-countries/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = _ref => {\n  _s();\n\n  let {\n    city\n  } = _ref;\n  const [weatherData, setWeatherData] = useState({});\n  const api_key = process.env.REACT_APP_API_KEY; // const city = props.city;\n\n  const API_URL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${api_key}`;\n  useEffect(() => {\n    const getWeatherData = async city => {\n      const reponse = await fetch(API_URL);\n      const data = await reponse.json();\n      console.log(data.main.temp);\n      await setWeatherData(data);\n    };\n\n    getWeatherData();\n  }, [API_URL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Weather in \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), console.log(weatherData.main.temp)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Weather, \"fXI0sAmj29itrxQaRZQrWhx5dGc=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["useEffect","useState","Weather","city","weatherData","setWeatherData","api_key","process","env","REACT_APP_API_KEY","API_URL","getWeatherData","reponse","fetch","data","json","console","log","main","temp"],"sources":["/Users/asif/Downloads/WebDev/FullStackOpen2022/part2/data-for-countries/src/components/Weather.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst Weather = ({city}) => {\n\n    const [weatherData, setWeatherData] = useState({})\n\n    const api_key = process.env.REACT_APP_API_KEY\n    // const city = props.city;\n    const API_URL = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${api_key}`\n    \n    useEffect(() => {\n        const getWeatherData = async (city) => {\n            const reponse = await fetch(API_URL)\n            const data = await reponse.json()\n            console.log(data.main.temp)\n            await setWeatherData(data)\n        }\n\n        getWeatherData()\n    }, [API_URL])\n\n    return(\n        <div>\n            <h3>Weather in {city}</h3>\n            {console.log(weatherData.main.temp)}\n        </div>\n    )\n}\n\nexport default Weather"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,OAAO,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EAExB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAMK,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B,CAJwB,CAKxB;;EACA,MAAMC,OAAO,GAAI,oDAAmDP,IAAK,uBAAsBG,OAAQ,EAAvG;EAEAN,SAAS,CAAC,MAAM;IACZ,MAAMW,cAAc,GAAG,MAAOR,IAAP,IAAgB;MACnC,MAAMS,OAAO,GAAG,MAAMC,KAAK,CAACH,OAAD,CAA3B;MACA,MAAMI,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;MACAC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAL,CAAUC,IAAtB;MACA,MAAMd,cAAc,CAACS,IAAD,CAApB;IACH,CALD;;IAOAH,cAAc;EACjB,CATQ,EASN,CAACD,OAAD,CATM,CAAT;EAWA,oBACI;IAAA,wBACI;MAAA,0BAAgBP,IAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKa,OAAO,CAACC,GAAR,CAAYb,WAAW,CAACc,IAAZ,CAAiBC,IAA7B,CAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAzBD;;GAAMjB,O;;KAAAA,O;AA2BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}